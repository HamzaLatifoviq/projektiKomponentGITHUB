@model projektiKomponentGITHUB.Models.UserCreate

@{
    ViewBag.Title = "RegisterView";
}

<style>
    .register-card {
        max-width: 450px;
        margin: 0 auto;
        padding: 30px;
        background-color: #fff;
        border-radius: 16px;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

        .register-card:hover {
            box-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);
        }

    .register-title {
        font-size: 2rem;
        font-weight: 700;
        text-align: center;
        margin-bottom: 30px;
        color: #ff7f00;
        text-shadow: 0 1px 3px rgba(255, 127, 0, 0.2);
        letter-spacing: 0.5px;
    }

    .form-label {
        font-weight: 600;
        color: #333;
    }

    .form-control {
        border-radius: 10px;
        height: 44px;
        font-size: 1rem;
        transition: box-shadow 0.3s ease, border-color 0.3s ease;
    }

        .form-control:focus {
            border-color: #ff7f00;
            box-shadow: 0 0 0 0.15rem rgba(255, 127, 0, 0.25);
            outline: none;
        }

    .btn-register {
        background: linear-gradient(45deg, #ff7f00, #ffae00);
        color: white;
        border: none;
        border-radius: 10px;
        padding: 10px 0;
        font-weight: 600;
        box-shadow: 0 4px 10px rgba(255, 140, 0, 0.3);
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

        .btn-register:hover {
            background: linear-gradient(45deg, #e67300, #ff9900);
            transform: translateY(-2px);
        }

    .alert {
        max-width: 450px;
        margin: 10px auto;
    }
</style>

@if (ViewBag.Error != null)
{
    <div class="alert alert-danger text-center">@ViewBag.Error</div>
}
@if (ViewBag.Success != null)
{
    <div class="alert alert-success text-center">@ViewBag.Success</div>
}

<div class="container mt-5">
    <div class="register-card">
        <h2 class="register-title">Krijo Llogari</h2>

        @using (Html.BeginForm("RegisterView", "RegisterLogin", FormMethod.Post))
        {
            <div class="mb-3">
                @Html.LabelFor(m => m.Emri, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Emri, new { @class = "form-control", placeholder = "Shkruaj emrin", required = "required" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(m => m.Mbiemri, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Mbiemri, new { @class = "form-control", placeholder = "Shkruaj mbiemrin", required = "required" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email-i", type = "email", required = "required" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(m => m.Username, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Username, new { @class = "form-control", placeholder = "Zgjedh përdoruesin", required = "required" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(m => m.Password, new { @class = "form-label" })
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Krijo fjalëkalim", required = "required" })
            </div>

            <div class="mb-4">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "form-label" })
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Konfirmo fjalëkalimin", required = "required" })
            </div>

            <button type="submit" class="btn btn-register w-100">Regjistrohu</button>
        }
    </div>
</div>
